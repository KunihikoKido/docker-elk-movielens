input {
  jdbc {
    jdbc_driver_library => "/usr/share/logstash/lib/mysql-connector-java-5.1.42-bin.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://${DATABASE_HOST:db}:${DATABASE_PORT:3306}/${DATABASE:movielens}?useSSL=${DATABASE_USE_SSL:true}"
    jdbc_user => "${DATABASE_USERNAME:root}"
    jdbc_password => "${DATABASE_PASSWORD}"
    statement => "
    SELECT
    	movies.movieid as movie_id,
    	movies.title,
    	movies.genres
    FROM movies
    ORDER BY movieId
    "
    jdbc_paging_enabled => "true"
    jdbc_page_size => "5000"
    use_column_value => true
    tracking_column => movie_id
    schedule => "${SCHEDULE:*/3 * * * * *}"
    last_run_metadata_path => "/usr/share/logstash/last_run/movielens.last_run_metadata"
  }
}
filter {
  #-------------------------------
  # genres
  #-------------------------------
  mutate {
    split => {"genres" => "|"}
  }

  jdbc_streaming {
    jdbc_driver_library => "/usr/share/logstash/lib/mysql-connector-java-5.1.42-bin.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://${DATABASE_HOST:db}:${DATABASE_PORT:3306}/${DATABASE:movielens}?useSSL=${DATABASE_USE_SSL:true}"
    jdbc_user => "${DATABASE_USERNAME:root}"
    jdbc_password => "${DATABASE_PASSWORD}"
    statement => "SELECT tag FROM tags WHERE tags.movieid = :movie_id"
    parameters => { "movie_id" => "movie_id"}
    tag_on_default_use => "_unknown_tags"
    target => "tags"
  }

  if "_unknown_feature_tags" not in [tags] {
    ruby {
      code => "
        tags = []
        event.get('tags').each{|obj|
          tags << obj['tag']
        }
        event.set('tags', tags)
      "
    }
  }


}
output {
  elasticsearch {
    hosts => ["${ELASTICSEARCH_HOST:elasticsearch:9200}"]
    index => "${ELASTICSEARCH_INDEX}"
    document_type => "${ELASTICSEARCH_TYPE}"
    document_id => "%{movie_id}"
  }
  stdout {codec => rubydebug {metadata => true }}
}
